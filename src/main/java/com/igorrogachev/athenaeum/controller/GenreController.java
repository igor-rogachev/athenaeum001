package com.igorrogachev.athenaeum.controller;


import com.igorrogachev.athenaeum.domain.Genre;
import com.igorrogachev.athenaeum.repository.GenreRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import java.util.ArrayList;

import java.util.List;

@Controller    // This means that this class is a Controller
@RequestMapping("/genre") // This means URL's start with /demo (after Application path)
public class GenreController {

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private GenreRepository genreRepository;

    @GetMapping("/add") // Add genre by GET Requests (command line parameters)
    public String addNewGenre(
            @RequestParam
                    String name,
                    Model model
            )
    {
        Genre genre = new Genre(name);
        genreRepository.save(genre);

        // ну и отобразим, что получилось
        createGenresList(model);

        return "genre";
    }

    // @ModelAttribute("loginModel")Login loginModel

    // Списано отсюда https://spring.io/guides/gs/handling-form-submission/
    @PostMapping("/add") // Add by Post Requests (form)
    public String addNewGenreByForm(
            @ModelAttribute("inputGenre") Genre inputGenre,
                    Model model
    )
    {
        genreRepository.save(inputGenre);

        // ну и отобразим, что получилось
        createGenresList(model);

        return "genre";
    }

    // рутина создания списка жанров для отображения
    private void createGenresList(Model model) {
        Iterable<Genre> genres = genreRepository.findAll();
        List<Genre> genresList = new ArrayList();
        genres.forEach(genresList::add);
        model.addAttribute("genresList", genresList);
        // Добавим пустой ЖАНР для ввода
        model.addAttribute("inputGenre", new Genre());
    }

    @GetMapping(path="/all")
    public String getAllGenres(Model model) {
        // ну и отобразим, что получилось
        createGenresList(model);

        return "genre";
    }

}
