package com.igorrogachev.athenaeum.controller;


import com.igorrogachev.athenaeum.domain.Genre;
import com.igorrogachev.athenaeum.repository.GenreRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import java.util.ArrayList;

import java.util.List;

@Controller    // This means that this class is a Controller
@RequestMapping(MapInOutConstants.GENRE_IN_MAP) // This means URL's start with /demo (after Application path)
public class GenreController {

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private GenreRepository genreRepository;

    @GetMapping(MapInOutConstants.ADD_IN_MAP) // Add genre by GET Requests (command line parameters)
    public String addNewGenre(
                    @RequestParam String name,
                    Model model
            )
    {
        Genre genre = new Genre(name);

        // genreRepository.save(genre);
        saveGenre(genre, model);

        // ну и отобразим, что получилось
        createGenresList(model);

        return MapInOutConstants.GENRE_OUT_MAP;
    }

    // @ModelAttribute("loginModel")Login loginModel
    // Списано отсюда https://spring.io/guides/gs/handling-form-submission/
    @PostMapping(MapInOutConstants.ADD_IN_MAP) // Add by Post Requests (form)
    public String addNewGenreByForm(
            @ModelAttribute("inputGenre") Genre inputGenre,
                    Model model
    )
    {
        saveGenre(inputGenre, model);

        // ну и отобразим, что получилось
        createGenresList(model);

        return MapInOutConstants.GENRE_OUT_MAP;
    }

    private void saveGenre(@ModelAttribute("inputGenre") Genre inputGenre, Model model) {
        try {
            genreRepository.save(inputGenre);
        }
        // org.postgresql.util.PSQLException ???????????? Нет такой эксепции, не нешел, чтобы добавить
        catch (Exception e) {
            String err = e.getMessage();
            if (e.getCause() != null) {
                err = err + " # e.getCause() # " + e.getCause().getMessage();
            }
            model.addAttribute("someException", err);
        }
    }

    // рутина создания списка жанров для отображения
    private void createGenresList(Model model) {
        Iterable<Genre> genres = genreRepository.findAll();
        List<Genre> genresList = new ArrayList();
        genres.forEach(genresList::add);
        model.addAttribute("genresList", genresList);
        // Добавим пустой ЖАНР для ввода
        model.addAttribute("inputGenre", new Genre());
    }

    @GetMapping(path= MapInOutConstants.ALL_IN_MAP)
    public String getAllGenres(Model model) {
        // ну и отобразим, что получилось
        createGenresList(model);

        return MapInOutConstants.GENRE_OUT_MAP;
    }

}
